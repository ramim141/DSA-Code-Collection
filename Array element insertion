// Array element insertion 

#include <stdio.h>

void display(int A[], int size)
{
    for (int i = 0; i < size; i++)
    {
        printf("%d ", A[i]);
    }
    printf("\n");
}

void indexInsertion(int A[], int size, int element, int capacity, int index)
{
    if (size >= capacity)
    {
        return -1;
    }
    for (int i = size - 1; i >= index; i--)
    {
        A[i + 1] = A[i];
    }
    A[index] = element;
    return 1;
}

int main()
{
    int A[100] = {1, 3, 4, 56, 7, 83, 4, 5, 6, 788, 9, 45, 98};
    int size = 13;

    int element, index;
    printf("Enter the index:");
    scanf("%d", &index);

    printf("Enter the element:");
    scanf("%d", &element);

    display(A, size);

    indexInsertion(A, size, element, 100, index);
    size += 1;
    display(A, size);

    return 0;
}







#include <iostream>
#include <stack>
#include <queue>
using namespace std;

bool isPalindrome(string str) {
    stack<char> charStack;
    queue<char> charQueue;

    // Push characters into stack and queue
    for (char c : str) {
        charStack.push(c);
        charQueue.push(c);
    }

    // Compare characters from stack and queue in reverse order
    while (!charStack.empty()) {
        if (charStack.top() != charQueue.front())
            return false;

        charStack.pop();
        charQueue.pop();
    }

    return true;
}

int main() {
    string input;
    cout << "Enter a string: ";
    cin >> input;

    if (isPalindrome(input))
        cout << "The string is a palindrome." << endl;
    else
        cout << "The string is not a palindrome." << endl;

    return 0;
}

